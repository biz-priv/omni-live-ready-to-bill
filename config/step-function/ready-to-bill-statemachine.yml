stateMachine:
  name: omni-live-logistics-state-machine-${self:provider.stage}
  role: !GetAtt stateMachineRole.Arn
  definition:
    Comment: "State machine for ready-to-bill"
    StartAt: fetchLatestRecordsToS3
    States:
      fetchLatestRecordsToS3:
        Type: Task
        Resource: !GetAtt copys3data.Arn
        Parameters:
          Payload.$: $
        Retry:
          - ErrorEquals:
              - Lambda.ServiceException
              - Lambda.AWSLambdaException
              - Lambda.SdkClientException
              - Lambda.TooManyRequestsException
            IntervalSeconds: 1
            MaxAttempts: 3
            BackoffRate: 2
        Next: queryAthena
      queryAthena:
        Type: Task
        Resource: !GetAtt queryAthena.Arn
        Parameters:
          Payload.$: $
        Retry:
          - ErrorEquals:
              - Lambda.ServiceException
              - Lambda.AWSLambdaException
              - Lambda.SdkClientException
              - Lambda.TooManyRequestsException
            IntervalSeconds: 1
            MaxAttempts: 3
            BackoffRate: 2
        ResultPath: $.queryAthena
        Next: csvRecordsMap
      csvRecordsMap:
        Type: Map
        ToleratedFailurePercentage: 100
        ItemProcessor:
          ProcessorConfig:
            Mode: DISTRIBUTED
            ExecutionType: EXPRESS
          StartAt: CheckIfRecordsExist
          States:
            CheckIfRecordsExist:
              Type: Choice
              Choices:
                - Variable: "$.Items"
                  IsPresent: true
                  Next: processCsvRecord
                - Variable: "$.item"
                  IsPresent: true 
                  Next: processCsvRecord
                - Variable: "$.item"
                  IsPresent: false
                  Next: NoRecordsFound
              Default: NoRecordsFound
            NoRecordsFound:
              Type: Pass
              Result: "No records found in CSV"
              End: true
            processCsvRecord:
              Type: Task
              Resource: !GetAtt readytobillupdate.Arn
              Parameters:
                Payload.$: $.Items
              Retry:
                - ErrorEquals:
                    - Lambda.ServiceException
                    - Lambda.AWSLambdaException
                    - Lambda.SdkClientException
                    - Lambda.TooManyRequestsException
                  IntervalSeconds: 1
                  MaxAttempts: 3
                  BackoffRate: 2
              End: true
              ResultPath: $.processCsvRecordResult
        ItemSelector:
          item.$: $$.Map.Item.Value
          mapInput.$: $
        ItemReader:
          Resource: arn:aws:states:::s3:getObject
          ReaderConfig:
            InputType: CSV
            CSVHeaderLocation: FIRST_ROW
          Parameters:
            Bucket.$: $.queryAthena.Bucket
            Key.$: $.queryAthena.Key
        ItemBatcher: 
          MaxItemsPerBatch:  10
        MaxConcurrency: 2
        Label: FileAnalysis
        ResultPath: null
        End: true
        Catch:
          - ErrorEquals: ["States.ItemReaderFailed"]
            Next: HandleItemReaderFailed
      HandleItemReaderFailed:
        Type: Pass
        Result: "No data records found in CSV"
        End: true
              
  events:
    - schedule:
        rate: cron(0 */2 * * ? *)
        enabled: false 