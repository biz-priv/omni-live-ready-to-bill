{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ReadytobillupdateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/omni-live-logistics-ready-for-billing-dev"
      }
    },
    "Copys3dataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/omni-live-logistics-copy-s3-data-dev"
      }
    },
    "Deletes3dataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/omni-live-logistics-delete-s3-data-dev"
      }
    },
    "QueryAthenaLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/omni-live-logistics-query-athena-dev"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "omni-live-logistics-ready-for-billing",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-copy-s3-data-dev:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-delete-s3-data-dev:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-query-athena-dev:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-ready-for-billing-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-copy-s3-data-dev:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-delete-s3-data-dev:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-query-athena-dev:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-ready-for-billing-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail",
                    "ses:SendRawEmail"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "athena:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "glue:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "omni-live-logistics-ready-for-billing",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ReadytobillupdateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707238495796-2024-02-06T16:54:55.796Z/readytobillupdate.zip"
        },
        "Handler": "src/readytobill_update.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "omni-live-logistics-ready-for-billing-dev",
        "MemorySize": 1024,
        "Timeout": 900,
        "Description": "omni live logistics readytobill_update",
        "Environment": {
          "Variables": {
            "Dynamo_Table": {
              "Ref": "ReadyforBilling"
            },
            "url": "https://tms-lvlp.loadtracking.com:6790/ws/api/orders/update"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:332281781429:layer:requests:1",
          "arn:aws:lambda:us-east-1:332281781429:layer:urllib:1"
        ]
      },
      "DependsOn": [
        "ReadytobillupdateLogGroup"
      ]
    },
    "Copys3dataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707238495796-2024-02-06T16:54:55.796Z/copys3data.zip"
        },
        "Handler": "src/copy_data_s3.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "omni-live-logistics-copy-s3-data-dev",
        "MemorySize": 1024,
        "Timeout": 900,
        "Description": "omni live logistics copy s3 data",
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:332281781429:layer:pytz:1"
        ]
      },
      "DependsOn": [
        "Copys3dataLogGroup"
      ]
    },
    "Deletes3dataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707238495796-2024-02-06T16:54:55.796Z/deletes3data.zip"
        },
        "Handler": "src/delete_s3_data.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "omni-live-logistics-delete-s3-data-dev",
        "MemorySize": 1024,
        "Timeout": 900,
        "Description": "omni live logistics delete s3 data",
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Deletes3dataLogGroup"
      ]
    },
    "QueryAthenaLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707238495796-2024-02-06T16:54:55.796Z/queryAthena.zip"
        },
        "Handler": "src/query-Athena.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "omni-live-logistics-query-athena-dev",
        "MemorySize": 1024,
        "Timeout": 900,
        "Description": "omni live logistics copy s3 data",
        "Environment": {
          "Variables": {
            "ssm_parameter": {
              "Ref": "MySSMParameter"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:332281781429:layer:pytz:1"
        ]
      },
      "DependsOn": [
        "QueryAthenaLogGroup"
      ]
    },
    "ReadytobillupdateLambdaVersion5A4k76s93loUPWLdWNdyiyDXUAAPvt4kj3gbIhIQ4c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ReadytobillupdateLambdaFunction"
        },
        "CodeSha256": "HswLqfST0NTKoEHHtzJ6DGj5kE36tHaNhFwYCx0bP3M=",
        "Description": "omni live logistics readytobill_update"
      }
    },
    "Copys3dataLambdaVersionB0JFnUUyoZ4iq8sRj7uDV0BdqHdAYWt6MiK34tTQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Copys3dataLambdaFunction"
        },
        "CodeSha256": "5nCW42dRIoKnOX+xRtEe+x2rTyIFjnTZJCYbbKjaE8Q=",
        "Description": "omni live logistics copy s3 data"
      }
    },
    "Deletes3dataLambdaVersionIkkZOE7cbPAJjQdQ0mjvYfsaE1K3BoAWhfHase3310w": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "Deletes3dataLambdaFunction"
        },
        "CodeSha256": "Z6vp9IKxUZozhhaU0HnocbyhER3hgZ5/1Al1PG0gvME=",
        "Description": "omni live logistics delete s3 data"
      }
    },
    "QueryAthenaLambdaVersionQyIMzIg5kiR173UQk3hAhy3lDIuGNmsAtc1or6G5wk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "QueryAthenaLambdaFunction"
        },
        "CodeSha256": "HgZUUO1tK8ZXFkvB5w5x8Ns/ULTlPHDy2uVz9WJs0Ik=",
        "Description": "omni live logistics copy s3 data"
      }
    },
    "OmniDashliveDashlogisticsDashstateDashmachineDashdev": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": {
          "Fn::Sub": [
            "{\n  \"Comment\": \"State machine for ready-to-bill\",\n  \"StartAt\": \"fetchLatestRecordsToS3\",\n  \"States\": {\n    \"fetchLatestRecordsToS3\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${19f90a149611edd6fe0a79867884af46}\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\"\n      },\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\",\n            \"Lambda.TooManyRequestsException\"\n          ],\n          \"IntervalSeconds\": 1,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Next\": \"queryAthena\"\n    },\n    \"queryAthena\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${b64f41421c47f3bd9680d2aee8e1bfa3}\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\"\n      },\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\",\n            \"Lambda.TooManyRequestsException\"\n          ],\n          \"IntervalSeconds\": 1,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"ResultPath\": \"$.queryAthena\",\n      \"Next\": \"csvRecordsMap\"\n    },\n    \"csvRecordsMap\": {\n      \"Type\": \"Map\",\n      \"ToleratedFailurePercentage\": 100,\n      \"ItemProcessor\": {\n        \"ProcessorConfig\": {\n          \"Mode\": \"DISTRIBUTED\",\n          \"ExecutionType\": \"EXPRESS\"\n        },\n        \"StartAt\": \"CheckIfRecordsExist\",\n        \"States\": {\n          \"CheckIfRecordsExist\": {\n            \"Type\": \"Choice\",\n            \"Choices\": [\n              {\n                \"Variable\": \"$.Items\",\n                \"IsPresent\": true,\n                \"Next\": \"processCsvRecord\"\n              },\n              {\n                \"Variable\": \"$.item\",\n                \"IsPresent\": true,\n                \"Next\": \"processCsvRecord\"\n              },\n              {\n                \"Variable\": \"$.item\",\n                \"IsPresent\": false,\n                \"Next\": \"NoRecordsFound\"\n              }\n            ],\n            \"Default\": \"NoRecordsFound\"\n          },\n          \"NoRecordsFound\": {\n            \"Type\": \"Pass\",\n            \"Result\": \"No records found in CSV\",\n            \"End\": true\n          },\n          \"processCsvRecord\": {\n            \"Type\": \"Task\",\n            \"Resource\": \"${d89275d37f25721c8596dc481b94cc24}\",\n            \"Parameters\": {\n              \"Payload.$\": \"$.Items\"\n            },\n            \"Retry\": [\n              {\n                \"ErrorEquals\": [\n                  \"Lambda.ServiceException\",\n                  \"Lambda.AWSLambdaException\",\n                  \"Lambda.SdkClientException\",\n                  \"Lambda.TooManyRequestsException\"\n                ],\n                \"IntervalSeconds\": 1,\n                \"MaxAttempts\": 3,\n                \"BackoffRate\": 2\n              }\n            ],\n            \"End\": true,\n            \"ResultPath\": \"$.processCsvRecordResult\"\n          }\n        }\n      },\n      \"ItemSelector\": {\n        \"item.$\": \"$$.Map.Item.Value\",\n        \"mapInput.$\": \"$\"\n      },\n      \"ItemReader\": {\n        \"Resource\": \"arn:aws:states:::s3:getObject\",\n        \"ReaderConfig\": {\n          \"InputType\": \"CSV\",\n          \"CSVHeaderLocation\": \"FIRST_ROW\"\n        },\n        \"Parameters\": {\n          \"Bucket.$\": \"$.queryAthena.Bucket\",\n          \"Key.$\": \"$.queryAthena.Key\"\n        }\n      },\n      \"ItemBatcher\": {\n        \"MaxItemsPerBatch\": 10\n      },\n      \"MaxConcurrency\": 2,\n      \"Label\": \"FileAnalysis\",\n      \"End\": true,\n      \"Catch\": [\n        {\n          \"ErrorEquals\": [\n            \"States.ItemReaderFailed\"\n          ],\n          \"Next\": \"HandleItemReaderFailed\"\n        }\n      ],\n      \"ResultPath\": null\n    },\n    \"HandleItemReaderFailed\": {\n      \"Type\": \"Pass\",\n      \"Result\": \"No data records found in CSV\",\n      \"End\": true\n    }\n  }\n}",
            {
              "19f90a149611edd6fe0a79867884af46": {
                "Fn::GetAtt": [
                  "Copys3dataLambdaFunction",
                  "Arn"
                ]
              },
              "b64f41421c47f3bd9680d2aee8e1bfa3": {
                "Fn::GetAtt": [
                  "QueryAthenaLambdaFunction",
                  "Arn"
                ]
              },
              "d89275d37f25721c8596dc481b94cc24": {
                "Fn::GetAtt": [
                  "ReadytobillupdateLambdaFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "stateMachineRole",
            "Arn"
          ]
        },
        "StateMachineName": "omni-live-logistics-state-machine-dev"
      },
      "DependsOn": []
    },
    "Deletes3dataEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 0 ? * SAT *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "Deletes3dataLambdaFunction",
                "Arn"
              ]
            },
            "Id": "deletes3dataSchedule"
          }
        ]
      }
    },
    "Deletes3dataLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "Deletes3dataLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Deletes3dataEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "ReadyDashtoDashbillStepFunctionsEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0 */2 * * ? *)",
        "State": "DISABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "OmniDashliveDashlogisticsDashstateDashmachineDashdev"
            },
            "Id": "ready-to-billStepFunctionsSchedule",
            "RoleArn": {
              "Fn::GetAtt": [
                "ReadyDashtoDashbillScheduleToStepFunctionsRole",
                "Arn"
              ]
            }
          }
        ]
      }
    },
    "ReadyDashtoDashbillScheduleToStepFunctionsRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-us-east-1-omni-live-logistics-ready-for-billing-ready-to-bill-schedule",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:StartExecution"
                  ],
                  "Resource": {
                    "Ref": "OmniDashliveDashlogisticsDashstateDashmachineDashdev"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "MySSMParameter": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/readytobill/bucket/key/parameter/dev",
        "Type": "String",
        "Value": "default_value"
      }
    },
    "ReadyforBilling": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "omni-live-logistics-ready-for-billing-dev",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "order_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "order_id",
            "KeyType": "HASH"
          }
        ]
      }
    },
    "stateMachineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "ready-to-bill-stepfuction-role-dev",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "states.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "statePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*",
                    "s3-object-lambda:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:RedriveExecution",
                    "states:StartExecution",
                    "states:DescribeExecution",
                    "states:StopExecution"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutTargets",
                    "events:PutRule",
                    "events:DescribeRule"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "xray:GetSamplingRules",
                    "xray:GetSamplingTargets"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-ServerlessDeploymentBucketName"
      }
    },
    "ReadytobillupdateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ReadytobillupdateLambdaVersion5A4k76s93loUPWLdWNdyiyDXUAAPvt4kj3gbIhIQ4c"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-ReadytobillupdateLambdaFunctionQualifiedArn"
      }
    },
    "Copys3dataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Copys3dataLambdaVersionB0JFnUUyoZ4iq8sRj7uDV0BdqHdAYWt6MiK34tTQ"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-Copys3dataLambdaFunctionQualifiedArn"
      }
    },
    "Deletes3dataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "Deletes3dataLambdaVersionIkkZOE7cbPAJjQdQ0mjvYfsaE1K3BoAWhfHase3310w"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-Deletes3dataLambdaFunctionQualifiedArn"
      }
    },
    "QueryAthenaLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "QueryAthenaLambdaVersionQyIMzIg5kiR173UQk3hAhy3lDIuGNmsAtc1or6G5wk"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-QueryAthenaLambdaFunctionQualifiedArn"
      }
    },
    "OmniDashliveDashlogisticsDashstateDashmachineDashdevArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "OmniDashliveDashlogisticsDashstateDashmachineDashdev"
      },
      "Export": {
        "Name": "sls-omni-live-logistics-ready-for-billing-dev-OmniDashliveDashlogisticsDashstateDashmachineDashdevArn"
      }
    }
  }
}