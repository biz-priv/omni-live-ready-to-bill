{
  "service": {
    "service": "omni-live-logistics-ready-for-billing",
    "serviceObject": {
      "name": "omni-live-logistics-ready-for-billing"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-1",
      "stage": "dev",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail",
            "ses:SendRawEmail"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ssm:*"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:*"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "athena:*"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "glue:*"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ReadytobillupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/omni-live-logistics-ready-for-billing-dev"
            }
          },
          "Copys3dataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/omni-live-logistics-copy-s3-data-dev"
            }
          },
          "Deletes3dataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/omni-live-logistics-delete-s3-data-dev"
            }
          },
          "QueryAthenaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/omni-live-logistics-query-athena-dev"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "omni-live-logistics-ready-for-billing",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-copy-s3-data-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-delete-s3-data-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-query-athena-dev:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-ready-for-billing-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-copy-s3-data-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-delete-s3-data-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-query-athena-dev:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/omni-live-logistics-ready-for-billing-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][4]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][5]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "omni-live-logistics-ready-for-billing",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ReadytobillupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z/readytobillupdate.zip"
              },
              "Handler": "src/readytobill_update.lambda_handler",
              "Runtime": "python3.9",
              "FunctionName": "omni-live-logistics-ready-for-billing-dev",
              "MemorySize": 1024,
              "Timeout": 900,
              "Description": "omni live logistics readytobill_update",
              "Environment": {
                "Variables": {
                  "Dynamo_Table": {
                    "Ref": "ReadyforBilling"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:332281781429:layer:requests:1"
              ]
            },
            "DependsOn": [
              "ReadytobillupdateLogGroup"
            ]
          },
          "Copys3dataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z/copys3data.zip"
              },
              "Handler": "src/copy_data_s3.lambda_handler",
              "Runtime": "python3.9",
              "FunctionName": "omni-live-logistics-copy-s3-data-dev",
              "MemorySize": 1024,
              "Timeout": 900,
              "Description": "omni live logistics copy s3 data",
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:332281781429:layer:pytz:1"
              ]
            },
            "DependsOn": [
              "Copys3dataLogGroup"
            ]
          },
          "Deletes3dataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z/deletes3data.zip"
              },
              "Handler": "src/delete_s3_data.lambda_handler",
              "Runtime": "python3.9",
              "FunctionName": "omni-live-logistics-delete-s3-data-dev",
              "MemorySize": 1024,
              "Timeout": 900,
              "Description": "omni live logistics delete s3 data",
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Deletes3dataLogGroup"
            ]
          },
          "QueryAthenaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z/queryAthena.zip"
              },
              "Handler": "src/query-Athena.lambda_handler",
              "Runtime": "python3.9",
              "FunctionName": "omni-live-logistics-query-athena-dev",
              "MemorySize": 1024,
              "Timeout": 900,
              "Description": "omni live logistics copy s3 data",
              "Environment": {
                "Variables": {
                  "ssm_parameter": {
                    "Ref": "MySSMParameter"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:332281781429:layer:pytz:1"
              ]
            },
            "DependsOn": [
              "QueryAthenaLogGroup"
            ]
          },
          "ReadytobillupdateLambdaVersiony1B4zPaLdAWtEygauQ05EEQQMA8c5tkNSBaEtI5t4E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ReadytobillupdateLambdaFunction"
              },
              "CodeSha256": "RdrFnziU92XQnMQ/LSw7tzNNRYczO+OcnB7FlXETD8Y=",
              "Description": "omni live logistics readytobill_update"
            }
          },
          "Copys3dataLambdaVersionD0uMpsy5jqgFHfTmYG2MLDJsGCCARIyi0SZMmlcsc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Copys3dataLambdaFunction"
              },
              "CodeSha256": "7Z8DGCWvVJE0p2+cIuZWEnLiWl4MEAO5bMG7xHFftiI=",
              "Description": "omni live logistics copy s3 data"
            }
          },
          "Deletes3dataLambdaVersionpXtWV9VQajcZloamJO14EikAPmYhrTBlmpxjMlckvo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Deletes3dataLambdaFunction"
              },
              "CodeSha256": "eCWL5vzFN6KKFHydd0P4XVo+BZ8bVeeZK6y/i4lbt4k=",
              "Description": "omni live logistics delete s3 data"
            }
          },
          "QueryAthenaLambdaVersionNepyJh8EE8FGYHvxJR9NvmUEnyBeBMeJdYeOKgC5YzQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "QueryAthenaLambdaFunction"
              },
              "CodeSha256": "6dh6DPnl2Z1PqdwkhhbvRFdb8uxXn+GKBg1nrZqPbTw=",
              "Description": "omni live logistics copy s3 data"
            }
          },
          "OmniDashliveDashlogisticsDashstateDashmachineDashdev": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": [
                  "{\n  \"Comment\": \"State machine for ready-to-bill\",\n  \"StartAt\": \"fetchLatestRecordsToS3\",\n  \"States\": {\n    \"fetchLatestRecordsToS3\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${19f90a149611edd6fe0a79867884af46}\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\"\n      },\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\",\n            \"Lambda.TooManyRequestsException\"\n          ],\n          \"IntervalSeconds\": 1,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"Next\": \"queryAthena\"\n    },\n    \"queryAthena\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${b64f41421c47f3bd9680d2aee8e1bfa3}\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\"\n      },\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\",\n            \"Lambda.TooManyRequestsException\"\n          ],\n          \"IntervalSeconds\": 1,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"ResultPath\": \"$.queryAthena\",\n      \"Next\": \"csvRecordsMap\"\n    },\n    \"csvRecordsMap\": {\n      \"Type\": \"Map\",\n      \"ToleratedFailurePercentage\": 100,\n      \"ItemProcessor\": {\n        \"ProcessorConfig\": {\n          \"Mode\": \"DISTRIBUTED\",\n          \"ExecutionType\": \"EXPRESS\"\n        },\n        \"StartAt\": \"processCsvRecord\",\n        \"States\": {\n          \"processCsvRecord\": {\n            \"Type\": \"Task\",\n            \"Resource\": \"${d89275d37f25721c8596dc481b94cc24}\",\n            \"Parameters\": {\n              \"Payload.$\": \"$.Items\"\n            },\n            \"Retry\": [\n              {\n                \"ErrorEquals\": [\n                  \"Lambda.ServiceException\",\n                  \"Lambda.AWSLambdaException\",\n                  \"Lambda.SdkClientException\",\n                  \"Lambda.TooManyRequestsException\"\n                ],\n                \"IntervalSeconds\": 1,\n                \"MaxAttempts\": 3,\n                \"BackoffRate\": 2\n              }\n            ],\n            \"End\": true,\n            \"ResultPath\": \"$.processCsvRecordResult\"\n          }\n        }\n      },\n      \"ItemSelector\": {\n        \"item.$\": \"$$.Map.Item.Value\",\n        \"mapInput.$\": \"$\"\n      },\n      \"ItemReader\": {\n        \"Resource\": \"arn:aws:states:::s3:getObject\",\n        \"ReaderConfig\": {\n          \"InputType\": \"CSV\",\n          \"CSVHeaderLocation\": \"FIRST_ROW\"\n        },\n        \"Parameters\": {\n          \"Bucket.$\": \"$.queryAthena.Bucket\",\n          \"Key.$\": \"$.queryAthena.Key\"\n        }\n      },\n      \"ItemBatcher\": {\n        \"MaxItemsPerBatch\": 10\n      },\n      \"MaxConcurrency\": 2,\n      \"Label\": \"FileAnalysis\",\n      \"Next\": \"deletefiles\",\n      \"ResultPath\": null\n    },\n    \"deletefiles\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"${771eadc0f08fa3c2bff73c42d367c05a}\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\"\n      },\n      \"Retry\": [\n        {\n          \"ErrorEquals\": [\n            \"Lambda.ServiceException\",\n            \"Lambda.AWSLambdaException\",\n            \"Lambda.SdkClientException\",\n            \"Lambda.TooManyRequestsException\"\n          ],\n          \"IntervalSeconds\": 1,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\": 2\n        }\n      ],\n      \"End\": true\n    }\n  }\n}",
                  {
                    "19f90a149611edd6fe0a79867884af46": {
                      "Fn::GetAtt": [
                        "Copys3dataLambdaFunction",
                        "Arn"
                      ]
                    },
                    "b64f41421c47f3bd9680d2aee8e1bfa3": {
                      "Fn::GetAtt": [
                        "QueryAthenaLambdaFunction",
                        "Arn"
                      ]
                    },
                    "d89275d37f25721c8596dc481b94cc24": {
                      "Fn::GetAtt": [
                        "ReadytobillupdateLambdaFunction",
                        "Arn"
                      ]
                    },
                    "771eadc0f08fa3c2bff73c42d367c05a": {
                      "Fn::GetAtt": [
                        "Deletes3dataLambdaFunction",
                        "Arn"
                      ]
                    }
                  }
                ]
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "stateMachineRole",
                  "Arn"
                ]
              },
              "StateMachineName": "omni-live-logistics-state-machine-dev"
            },
            "DependsOn": []
          },
          "MySSMParameter": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
              "Name": "/readytobill/bucket/key/parameter/dev",
              "Type": "String",
              "Value": "default_value"
            }
          },
          "ReadyforBilling": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "omni-live-logistics-ready-for-billing-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "order_id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "order_id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "stateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "ready-to-bill-stepfuction-role-dev",
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "states.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "statePolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*",
                          "s3-object-lambda:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:RedriveExecution",
                          "states:StartExecution",
                          "states:DescribeExecution",
                          "states:StopExecution"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "events:PutTargets",
                          "events:PutRule",
                          "events:DescribeRule"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords",
                          "xray:GetSamplingRules",
                          "xray:GetSamplingTargets"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-ServerlessDeploymentBucketName"
            }
          },
          "ReadytobillupdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ReadytobillupdateLambdaVersiony1B4zPaLdAWtEygauQ05EEQQMA8c5tkNSBaEtI5t4E"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-ReadytobillupdateLambdaFunctionQualifiedArn"
            }
          },
          "Copys3dataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Copys3dataLambdaVersionD0uMpsy5jqgFHfTmYG2MLDJsGCCARIyi0SZMmlcsc"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-Copys3dataLambdaFunctionQualifiedArn"
            }
          },
          "Deletes3dataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Deletes3dataLambdaVersionpXtWV9VQajcZloamJO14EikAPmYhrTBlmpxjMlckvo"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-Deletes3dataLambdaFunctionQualifiedArn"
            }
          },
          "QueryAthenaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "QueryAthenaLambdaVersionNepyJh8EE8FGYHvxJR9NvmUEnyBeBMeJdYeOKgC5YzQ"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-QueryAthenaLambdaFunctionQualifiedArn"
            }
          },
          "OmniDashliveDashlogisticsDashstateDashmachineDashdevArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "OmniDashliveDashlogisticsDashstateDashmachineDashdev"
            },
            "Export": {
              "Name": "sls-omni-live-logistics-ready-for-billing-dev-OmniDashliveDashlogisticsDashstateDashmachineDashdevArn"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": true
      }
    },
    "plugins": [
      "serverless-python-requirements",
      "serverless-step-functions"
    ],
    "pluginsData": {},
    "functions": {
      "readytobillupdate": {
        "name": "omni-live-logistics-ready-for-billing-dev",
        "handler": "src/readytobill_update.lambda_handler",
        "description": "omni live logistics readytobill_update",
        "timeout": 900,
        "package": {
          "patterns": [
            "!**/*",
            "src/shared/**",
            "src/readytobill_update.py",
            "src/query_file.sql"
          ],
          "artifact": "/Users/raviteja/raviteja/omni-live-ready-to-bill/.serverless/readytobillupdate.zip"
        },
        "runtime": "python3.9",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ReadytobillupdateLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "Dynamo_Table": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ReadytobillupdateLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"Dynamo_Table\"]"
          }
        },
        "events": [],
        "module": ".",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "ReadytobillupdateLambdaVersiony1B4zPaLdAWtEygauQ05EEQQMA8c5tkNSBaEtI5t4E"
      },
      "copys3data": {
        "name": "omni-live-logistics-copy-s3-data-dev",
        "handler": "src/copy_data_s3.lambda_handler",
        "description": "omni live logistics copy s3 data",
        "timeout": 900,
        "package": {
          "patterns": [
            "!**/*",
            "src/shared/**",
            "src/copy_data_s3.py"
          ],
          "artifact": "/Users/raviteja/raviteja/omni-live-ready-to-bill/.serverless/copys3data.zip"
        },
        "runtime": "python3.9",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Copys3dataLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [],
        "module": ".",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "Copys3dataLambdaVersionD0uMpsy5jqgFHfTmYG2MLDJsGCCARIyi0SZMmlcsc"
      },
      "deletes3data": {
        "name": "omni-live-logistics-delete-s3-data-dev",
        "handler": "src/delete_s3_data.lambda_handler",
        "description": "omni live logistics delete s3 data",
        "timeout": 900,
        "package": {
          "patterns": [
            "!**/*",
            "src/shared/**",
            "src/delete_s3_data.py"
          ],
          "artifact": "/Users/raviteja/raviteja/omni-live-ready-to-bill/.serverless/deletes3data.zip"
        },
        "runtime": "python3.9",
        "events": [],
        "module": ".",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "Deletes3dataLambdaVersionpXtWV9VQajcZloamJO14EikAPmYhrTBlmpxjMlckvo"
      },
      "queryAthena": {
        "name": "omni-live-logistics-query-athena-dev",
        "handler": "src/query-Athena.lambda_handler",
        "description": "omni live logistics copy s3 data",
        "timeout": 900,
        "package": {
          "patterns": [
            "!**/*",
            "src/shared/**",
            "src/query-Athena.py",
            "src/query_file.sql"
          ],
          "artifact": "/Users/raviteja/raviteja/omni-live-ready-to-bill/.serverless/queryAthena.zip"
        },
        "runtime": "python3.9",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"QueryAthenaLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "ssm_parameter": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"QueryAthenaLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"ssm_parameter\"]"
          }
        },
        "events": [],
        "module": ".",
        "memory": 1024,
        "vpc": {},
        "versionLogicalId": "QueryAthenaLambdaVersionNepyJh8EE8FGYHvxJR9NvmUEnyBeBMeJdYeOKgC5YzQ"
      }
    },
    "resources": {
      "Resources": {
        "MySSMParameter": {
          "Type": "AWS::SSM::Parameter",
          "Properties": {
            "Name": "/readytobill/bucket/key/parameter/dev",
            "Type": "String",
            "Value": "default_value"
          }
        },
        "ReadyforBilling": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "omni-live-logistics-ready-for-billing-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "order_id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "order_id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "stateMachineRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "ready-to-bill-stepfuction-role-dev",
            "AssumeRolePolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "states.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "statePolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "lambda:InvokeFunction"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*",
                        "s3-object-lambda:*"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "states:RedriveExecution",
                        "states:StartExecution",
                        "states:DescribeExecution",
                        "states:StopExecution"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "events:PutTargets",
                        "events:PutRule",
                        "events:DescribeRule"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "xray:PutTraceSegments",
                        "xray:PutTelemetryRecords",
                        "xray:GetSamplingRules",
                        "xray:GetSamplingTargets"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "omni-live-logistics-ready-for-billing",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/omni-live-logistics-ready-for-billing/dev/code-artifacts",
        "artifactDirectoryName": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "ready-to-bill": {
            "name": "omni-live-logistics-state-machine-dev",
            "role": {
              "Fn::GetAtt": [
                "stateMachineRole",
                "Arn"
              ]
            },
            "definition": {
              "Comment": "State machine for ready-to-bill",
              "StartAt": "fetchLatestRecordsToS3",
              "States": {
                "fetchLatestRecordsToS3": {
                  "Type": "Task",
                  "Resource": "${19f90a149611edd6fe0a79867884af46}",
                  "Parameters": {
                    "Payload.$": "$"
                  },
                  "Retry": [
                    {
                      "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                      ],
                      "IntervalSeconds": 1,
                      "MaxAttempts": 3,
                      "BackoffRate": 2
                    }
                  ],
                  "Next": "queryAthena"
                },
                "queryAthena": {
                  "Type": "Task",
                  "Resource": "${b64f41421c47f3bd9680d2aee8e1bfa3}",
                  "Parameters": {
                    "Payload.$": "$"
                  },
                  "Retry": [
                    {
                      "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                      ],
                      "IntervalSeconds": 1,
                      "MaxAttempts": 3,
                      "BackoffRate": 2
                    }
                  ],
                  "ResultPath": "$.queryAthena",
                  "Next": "csvRecordsMap"
                },
                "csvRecordsMap": {
                  "Type": "Map",
                  "ToleratedFailurePercentage": 100,
                  "ItemProcessor": {
                    "ProcessorConfig": {
                      "Mode": "DISTRIBUTED",
                      "ExecutionType": "EXPRESS"
                    },
                    "StartAt": "processCsvRecord",
                    "States": {
                      "processCsvRecord": {
                        "Type": "Task",
                        "Resource": "${d89275d37f25721c8596dc481b94cc24}",
                        "Parameters": {
                          "Payload.$": "$.Items"
                        },
                        "Retry": [
                          {
                            "ErrorEquals": [
                              "Lambda.ServiceException",
                              "Lambda.AWSLambdaException",
                              "Lambda.SdkClientException",
                              "Lambda.TooManyRequestsException"
                            ],
                            "IntervalSeconds": 1,
                            "MaxAttempts": 3,
                            "BackoffRate": 2
                          }
                        ],
                        "End": true,
                        "ResultPath": "$.processCsvRecordResult"
                      }
                    }
                  },
                  "ItemSelector": {
                    "item.$": "$$.Map.Item.Value",
                    "mapInput.$": "$"
                  },
                  "ItemReader": {
                    "Resource": "arn:aws:states:::s3:getObject",
                    "ReaderConfig": {
                      "InputType": "CSV",
                      "CSVHeaderLocation": "FIRST_ROW"
                    },
                    "Parameters": {
                      "Bucket.$": "$.queryAthena.Bucket",
                      "Key.$": "$.queryAthena.Key"
                    }
                  },
                  "ItemBatcher": {
                    "MaxItemsPerBatch": 10
                  },
                  "MaxConcurrency": 2,
                  "Label": "FileAnalysis",
                  "Next": "deletefiles",
                  "ResultPath": null
                },
                "deletefiles": {
                  "Type": "Task",
                  "Resource": "${771eadc0f08fa3c2bff73c42d367c05a}",
                  "Parameters": {
                    "Payload.$": "$"
                  },
                  "Retry": [
                    {
                      "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                      ],
                      "IntervalSeconds": 1,
                      "MaxAttempts": 3,
                      "BackoffRate": 2
                    }
                  ],
                  "End": true
                }
              }
            }
          }
        }
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"stepFunctions\"][\"stateMachines\"]"
      },
      "activities": []
    }
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/omni-live-logistics-ready-for-billing/dev/1707125569508-2024-02-05T09:32:49.508Z",
    "artifact": ""
  }
}